name: waka-readme

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    # Runs At 03:00 every day.
    - cron: '0 3 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: check github context
        run: |
          echo "github.run_id: ${{ github.run_id }}"
          echo "github.run_number: ${{ github.run_number }}"
          echo "github.run_attempt: ${{ github.run_attempt }}"
          echo "github.actor_id: ${{ github.actor_id }}"
          echo ""
          echo "github.workflow: ${{ github.workflow }}"
          echo "github.workflow_ref: ${{ github.workflow_ref }}"
          echo "github.workspace: ${{ github.workspace }}"
          echo "github.job: ${{ github.job }}"
          echo ""
          echo "runner.os: ${{ runner.os }}"
          echo "runner.arch: ${{ runner.arch }}"
          echo "runner.temp: ${{ runner.temp }}"
          echo ""
          echo " GITHUB_EVENT_NAME ${GITHUB_EVENT_NAME}"
          echo " github.event_name ${{ github.event_name }}"
          echo " GITHUB_SHA ${GITHUB_SHA}"
          echo " GITHUB_REF_TYPE ${GITHUB_REF_TYPE}"
          echo " github.ref_type ${{ github.ref_type }}"
          echo " GITHUB_REF ${GITHUB_REF}"
          echo " github.ref ${{ github.ref }}"
          echo " GITHUB_REF_NAME ${GITHUB_REF_NAME}"
          echo " github.ref_name ${{ github.ref_name }}"
          echo " GITHUB_BASE_REF ${GITHUB_BASE_REF}"
          echo " github.base_ref ${{ github.base_ref }}"
          echo " GITHUB_HEAD_REF ${GITHUB_HEAD_REF}"
          echo " github.head_ref ${{ github.head_ref }}"
          echo ""

      - name: checkout
        uses: actions/checkout@v4

      - name: update by athul/waka-readme
        uses: athul/waka-readme@master
        with:
          WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
      # - name: Push new README.md
      #   run: |
      #    echo "GITHUB_ACTOR -> ${GITHUB_ACTOR}"
      #    echo "GITHUB_REPOSITORY -> ${GITHUB_REPOSITORY}"
      #    COMMIT_MSG="update README.md data of waka, by github action at cron set"
      #    if [ -z "${COMMIT_MSG}" ]; then
      #     echo "error: not found env: COMMIT_MSG"
      #     exit 1
      #    fi
      #    echo "COMMIT_MSG -> ${COMMIT_MSG}"
      #    # https://docs.github.com/en/free-pro-team@latest/actions/reference/authentication-in-a-workflow#about-the-github_token-secret
      #    remote_repo="https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"
      #    git config http.sslVerify false
      #    git config user.name "${GITHUB_ACTOR}"
      #    git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      #    git remote add publisher "${remote_repo}"

      #    # useful for debugging
      #    git show-ref
      #    git branch --verbose

      #    # install lfs hooks
      #    git lfs install

      #    # publish any new files
      #    git checkout main
      #    git add -A
      #    git commit -m "${COMMIT_MSG}" || exit 0
      #    git pull --rebase publisher main
      #    git push publisher main